#!/usr/bin/perl
use FileHandle;
use File::Basename;
$log = "srtm_mosaic.log";
$data_tab = "srtm_data_tab";
$dem_par_in = "dem_par.in";

if (($#ARGV + 1) < 8){die <<EOS ;}
*** $0
*** Copyright 2015, Gamma Remote Sensing, v1.2 23-Jan-2015 clw ***
*** Mosaic CGIAR 5x5 degree SRTM DEM tiles (GeoTIFF) to cover a specified region ***

usage: $0 <SRTM_dir> <lat1> <lon1> <lat2> <lon> <DEM> <DEM_par>
  SRTM_dir  directory that contains SRTM v4.1 5x5 degree tiles from CGIAR in GeoTIFF format (enter . for current directory)
  lat1      upper left corner latitude (North value, 60 to -60 deg)
  lon1      upper left corner longitude (East value, -180 to 180 deg)
  lat2      lower right corner latitude (North value, 60 to -60 deg)
  lon2      lower right corner longitude (East value, -180 to 180 deg)
  DEM       (output) DEM mosaic (enter - for none)
  DEM_par   (output) DEM mosaic parameter file (enter - for none)
  offset    height of the geoid relative to WGS84 ellipsoid (m)
  
  NOTE: run first with DEM and DEM_par parameters set to - to get a list of
  of the required 5x5 deg SRTM DEM tiles. Place these tiles in a common directory 
  and rerun the script, now with filenames for the DEM and DEM_par files.
      
EOS

$srtm_dir = $ARGV[0];
$lat1 = $ARGV[1];
$lon1 = $ARGV[2];
$lat2 = $ARGV[3];
$lon2 = $ARGV[4];
$dem = $ARGV[5];
$dem_par = $ARGV[6];
$goff = $ARGV[7];
print "offset of the geoid relative to the WGS84 ellipsoid (m): $goff\n";
 
print "$0 log file: $log\n";
open(LOG,">$log") or die "ERROR $0: cannot open log file: $log\n"; 
print LOG "$0 @ARGV\n\n";	#print command line that was used
close LOG;

if ($dem ne "-" and $dem_par ne "-") {
  $mflg = 1;
  open(DATA_TAB, ">$data_tab") or die "\nERROR $0: cannot create file to contain list of tiles: $data_tab\n";
  print "table of DEMs and DEM parameter files $data_tab\n"; 
}
else {$mflg = 0;}

$ntl = ($lat1 - 60)/(-5) + 1;
$etl = ($lon1 + 180)/5 + 1;
$nbr = ($lat2 - 60)/(-5) + 1;
$ebr = ($lon2 + 180)/5 + 1;
$ntiles = 0;

for ($n = int($ntl); $n <= int($nbr); $n++){
  for ($e = int($etl); $e <= int($ebr); $e++){
    $ntiles++;
    $srtm = sprintf "%s/srtm_%02d_%02d.tif", $srtm_dir, $e, $n;
    print "SRTM GeoTIFF tile: $srtm\n";
    if ($mflg == 1) {
      my ($s1, $dir1, $ext1) = fileparse($srtm, qr/\.[^.]*/); #extension is the last bit after the last period
      $tdem = $s1.".dem";
      $tdem_par = $s1.".dem_par";
      execute("srtm2dem $srtm $tdem $tdem_par $goff",$log);
      printf DATA_TAB "%s  %s\n",$tdem, $tdem_par;
    }
  }
}

if ($dem eq  "-" or $dem_par eq "-"){
  close DATA_TAB;
  print "log file: $log\n";
  $time = localtime;
  print "$0 processing end: $time\n";
  exit 0; 
}

if ($mflg == 1 and $ntiles == 1){
  print "\noutput DEM: $dem\n";
  print "output DEM parameter file: $dem_par\n";
  rename $tdem, $dem;
  rename $tdem_par, $dem_par;
  print "log file: $log\n";
  $time = localtime;
  print "$0 processing end: $time\n";
  exit 0;
}

if ($mflg == 1) {
  print "\noutput DEM: $dem\n";
  print "output DEM parameter file: $dem_par\n";
  execute("rm -f $dem_par",$log);
  execute("multi_mosaic $data_tab $dem $dem_par 0 3 ",$log);
}

print "log file: $log\n";
$time = localtime;
print "\n$0 processing end: $time\n";
open(LOG,">>$log") or die "ERROR $0: cannot open log file: $log\n";
print LOG "\n$0 processing end: $time\n";
exit 0;

sub execute{
  my ($command, $log) = @_;
  if (-e $log){open(LOG,">>$log") or die "ERROR $0: cannot open log file: $log  command: $command\n";}
  else {open(LOG,">$log") or die "ERROR $0 : cannot open log file: $log  command: $command\n";}
  LOG->autoflush;
  print "$command\n";
  print LOG ("\n${command}\n");
  close LOG;
  $exit = system("$command 1>> $log");
  $exit == 0 or die "ERROR $0: non-zero exit status: $command\n"
}

