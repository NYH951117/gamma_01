#!/usr/bin/perl
use FileHandle;
use File::Basename;

$pixasarea = 0;

if (($#ARGV + 1) < 3){die <<EOS ;}
*** $0
*** Copyright 2012, Gamma Remote Sensing, v1.0 29-Aug-2012 clw ***
*** Convert NED DEM tile (GEOTIFF) to Gamma format DEM and DEM parameter file ***

usage: $0 <NED_DEM> <DEM> <DEM_par>
    NED_DEM   (input)  NED DEM data
    DEM       (output) DEM data (short integer)
    DEM_par   (output) Gamma DEM parameter file

EOS

$ned = $ARGV[0];
$dem     = $ARGV[1];
$dem_par = $ARGV[2];
$dem_par_in = "dem_par.in";
$ned_tmp= "ned_tmp";

my ($s1, $dir1, $ext1) = fileparse($ned, qr/\.[^.]*/); #extension is the last bit after the last period
print "basename: $s1\n";
$log = "$s1"."_ned_dem.log";

print "NED DEM in GEOTIFF format: $ned\n";
print "output DEM: $dem\n";
print "output DEM parameter file: $dem_par\n";
print "log file: $log\n";

$gdal_output = `gdalinfo $ned`;
#print $gdal_output;

my @gdal = split /\n/, $gdal_output; #split into lines

foreach my $line (@gdal){
  if ($line =~ m/Size is/) {
    @a = split (/[\s+,]/, $line);	#parse line into tokens, splitting on whitespace or ,
    $xsize = $a[2];
    $ysize = $a[4];
    print "\nDEM samples across: $xsize   down: $ysize\n";
  }
  if ($line =~ m/Upper Left/) {
    @a = split (/[(),]/, $line);	#parse line into tokens, splitting on (),
    $lon = $a[1];
    $lat = $a[2];
    print "Upper Left corner latitude (deg.): $lat    longitude (deg.): $lon\n";
  }

  if ($line =~ m/Pixel Size/){
    @a = split (/[(),]/, $line);	#parse line into tokens, splitting on (),
    $pix_lon = $a[1];
    $pix_lat = $a[2];
    print "Pixel Size (deg.) latitude: $pix_lat    longitude: $pix_lon\n";
  }

  if ($line =~ /  AREA_OR_POINT=Area/){
    $pixasarea = 1;
  }
}

if ($pixasarea == 1){
  print "\nPixel as Area! updating corner coordinates to pixel as point\n";
  print "pixel upper latitude (deg.): $lat    longitude (deg.): $lon\n";
  $lon = $lon + $pix_lon/2.0;
  $lat = $lat + $pix_lat/2.0;
  print "updated pixel upper latitude (deg.): $lat    longitude (deg.): $lon\n";
}
$pix_size = $pix_lon * 1.11132953e5;
print "approximate DEM latitude pixel spacing (m): $pix_size\n"; 

open(DPAR, "> $dem_par_in") or die "ERROR $0: cannot create file with inputs to create_dem_par: $dem_par_in\n\n";
print DPAR "EQA\nCONUS\n4\n$s1\nINTEGER*2\n0.0\n1.0\n$xsize\n$ysize\n$pix_lat $pix_lon\n$lat $lon\n";
close(DPAR);
print "\n";
execute("rm -f $dem_par",$log);
execute("create_dem_par $dem_par < $dem_par_in",$log);
print "\n\n";

execute("gdal_translate -ot Int16 -of ENVI $ned  $ned_tmp",$log);
execute("swap_bytes $ned_tmp $dem 2", $log);
execute("replace_values $dem 0 -1  $ned_tmp  $xsize 0 4", $log);
execute("replace_values $ned_tmp -32768 -1  $dem  $xsize 0 4", $log);
execute("/bin/rm -f $ned_tmp",$log);
exit(0);

sub execute{
  my ($command, $log) = @_;
  if (-e $log){open(LOG,">>$log") or die "ERROR $0: cannot open log file: $log  command: $command\n";}
  else {open(LOG,">$log") or die "ERROR $0 : cannot open log file: $log  command: $command\n";}
  LOG->autoflush;
  print "$command\n";
  print LOG ("\n${command}\n");
  close LOG;
  $exit = system("$command 1>> $log");
  $exit == 0 or die "ERROR $0: non-zero exit status: $command\n"
}
