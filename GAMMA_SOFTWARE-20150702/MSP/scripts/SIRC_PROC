#! /bin/csh -fe
echo "SIRC_PROC: Process SAR data from SIR-C SRL-1 and SRL-2 missions v3.1 11-May-2000 clw/uw"
echo " "
if ($#argv < 4)then
  echo "usage: SIRC_PROC <sensor> <scene> <RLK> <AZLK> [RAW_dir] [RC_dir] [SLC_dir] [AZ_PATCH]"
  echo "       sensor      SIR-C sensor parameter file, generated by SIRC_proc"
  echo "       scene       scene identifier (example: orbit number)"
  echo "       RLK         number of range looks in the multilook intensity (MLI) image"
  echo "       AZLK        number of azimuth looks in the MLI image"
  echo "       RAW_dir     SAR raw data file directory"
  echo "       RC_dir      range compressed data file directory"
  echo "       SLC_dir     single look complex image file directory"
  echo "       AZ_PATCH    azimuth patch size: 2048, 4096, 8192 (default=4096)"
  exit
endif

set RAW = "."
if ($#argv >= 5) then 
  set RAW = $5
endif

set RC = "."
if ($#argv >= 6) then 
  set RC = $6
endif

set SLC = "."
if ($#argv >= 7) then 
  set SLC = $7
endif

set AZ_PATCH = 4096
if ($#argv >= 8) then 
  set AZ_PATCH = $8
endif

# tests if required input files exist:
if(1) then
  echo "test if required input/output files and directories exist"
  if (-e "$1" == 0 ) then 
    echo "ERROR: sensor parameter file ($1) does not exist"
    exit(-1)
  endif 
  if ((-e "p$2.slc.par" == 0 )) then 
    echo "ERROR: MSP processing parameter file (p$2.slc.par) does not exist"
    exit(-1)
  endif 
  if (($#argv >= 5) && (-e "$5" == 0 )) then 
    echo "ERROR: RAW_dir ($5) does not exist"
    exit(-1)
  endif 
  if ((-e "$RAW/$2.raw" == 0 ) && (-e "$RAW/$2.fix" == 0 )) then 
    echo "ERROR: Raw data file ($RAW/$2.raw or $RAW/$2.fix) does not exist"
    exit(-1)
  endif 
  if( ($#argv >= 6) && (-e "$6" == 0 ) ) then
    echo "ERROR: RC_dir ($6) does not exist"
    exit(-1)
  endif 
  if( ($#argv >= 7) && (-e "$7" == 0 ) ) then 
    echo "ERROR: SLC_dir ($7) does not exist"
    exit(-1)
  endif 
  echo "required input/output files and directories exist"
endif

set SENSOR = $1
set RLK = $3
set AZLK = $4

set DECIM = 1
set AMB_FLAG = 1
set NSUB = 16
set AUTOF_SNR_MIN = 2.0

set AZ_PROC = az_proc
set ANTENNA = constant_antenna.gain
 
set CAL_FACT = "0.0"

# check if fixed raw data file exists (missing lines, range gate etc.)

if (-e $RAW/$2.fix) then
  set RAW_DATA = $RAW/$2.fix
else
  set RAW_DATA = $RAW/$2.raw
endif

echo " "
echo "raw data decimation factor: $DECIM"
echo "number of range looks:      $RLK"
echo "number of azimuth looks:    $AZLK"
echo "minimum autofocus SNR:      $AUTOF_SNR_MIN"
echo "azimuth patch size:         $AZ_PATCH"
echo "azimuth processing program: $AZ_PROC"
echo "antenna pattern filename:   $ANTENNA"
echo "raw data file:              $RAW_DATA"
echo "range compressed data:      $RC/$2.rc"
echo "SLC file:                   $SLC/$2.slc"
echo "Multi-Look Intensity:       $2.mli"
 
echo " "
rm -f doppler_$2.out
echo "doppler_real $SENSOR p$2.slc.par $RAW_DATA $2.dop - $NSUB $AMB_FLAG > doppler_$2.out"
doppler_real $SENSOR p$2.slc.par $RAW_DATA $2.dop - $NSUB $AMB_FLAG > doppler_$2.out

echo " "
rm -f rspec_$2.out
echo "rspec_real $SENSOR p$2.slc.par $RAW_DATA $2.rspec > rspec_real_$2.out"
rspec_IQ $SENSOR p$2.slc.par $RAW_DATA $2.rspec > rspec_real_$2.out

echo " "
rm -f rc_$2.out
echo "rc_real $SENSOR p$2.slc.par $RAW_DATA $RC/$2.rc > rc_$2.out"
rc_real $SENSOR p$2.slc.par $RAW_DATA $RC/$2.rc > rc_$2.out

echo " "
rm -f autof_$2.out
echo "autof $SENSOR p$2.slc.par $RC/$2.rc $2.autof $AUTOF_SNR_MIN $DECIM 2048 0 2048 1 > autof_$2.out"
autof $SENSOR p$2.slc.par $RC/$2.rc $2.autof $AUTOF_SNR_MIN $DECIM 2048 0 2048 1 > autof_$2.out 

echo " "
echo "autof $SENSOR p$2.slc.par $RC/$2.rc $2.autof $AUTOF_SNR_MIN $DECIM 2048 0 2048 1 >> autof_$2.out"
autof $SENSOR p$2.slc.par $RC/$2.rc $2.autof $AUTOF_SNR_MIN $DECIM 2048 0 2048 1 >> autof_$2.out 

echo ""
rm -f az_$2.out
echo "$AZ_PROC $SENSOR p$2.slc.par $RC/$2.rc $SLC/$2.slc $AZ_PATCH 0 $CAL_FACT 0  > az_proc_$2.out"
$AZ_PROC $SENSOR p$2.slc.par $RC/$2.rc $SLC/$2.slc $AZ_PATCH 0 $CAL_FACT 0 > az_proc_$2.out

if($SLC != ".") ln -s $SLC/$2.slc $2.slc

echo ""
rm -f mli_$2.out
echo "multi_SLC  p$2.slc.par p$2.mli.par $SLC/$2.slc $2.mli $RLK $AZLK > multi_SLC_$2.out"
multi_SLC p$2.slc.par p$2.mli.par $2.slc $SLC/$2.mli $RLK $AZLK > multi_SLC_$2.out

#echo ""
#echo "rm -f $RC/$2.rc"
#rm -f $RC/$2.rc

